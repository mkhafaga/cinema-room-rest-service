type: edu
files:
  - name: src/cinema/Main.java
    visible: true
    text: |
      package cinema;
      
      import org.springframework.boot.SpringApplication;
      import org.springframework.boot.autoconfigure.SpringBootApplication;
      
      @SpringBootApplication
      public class Main {
          public static void main(String[] args) {
              SpringApplication.run(Main.class, args);
          }
      }
    learner_created: false
  - name: src/resources/application.properties
    visible: true
    text: |-
      server.port=28852
      management.endpoints.web.exposure.include=*
      management.endpoint.shutdown.enabled=true
    learner_created: false
  - name: test/CinemaTests.java
    visible: false
    text: |
      import org.hyperskill.hstest.dynamic.DynamicTest;
      import org.hyperskill.hstest.dynamic.input.DynamicTesting;
      import org.hyperskill.hstest.mocks.web.response.HttpResponse;
      import org.hyperskill.hstest.stage.SpringTest;
      import org.hyperskill.hstest.testcase.CheckResult;
      
      import static org.hyperskill.hstest.testing.expect.Expectation.expect;
      import static org.hyperskill.hstest.testing.expect.json.JsonChecker.isArray;
      import static org.hyperskill.hstest.testing.expect.json.JsonChecker.isInteger;
      import static org.hyperskill.hstest.testing.expect.json.JsonChecker.isObject;
      
      public class CinemaTests extends SpringTest {
      
          CheckResult testEndpoint() {
      
              HttpResponse response = get("/seats").send();
      
              if (response.getStatusCode() != 200) {
                  return CheckResult.wrong("GET /seats should respond with " +
                      "status code 200, responded: " + response.getStatusCode() + "\n\n" +
                      "Response body:\n" + response.getContent());
              }
      
              return CheckResult.correct();
          }
      
          CheckResult testEndpointAvailableSeats() {
              HttpResponse response = get("/seats").send();
      
              expect(response.getContent()).asJson().check(
                  isObject()
                      .value("seats",
                          isArray(
                              81,
                              isObject()
                              .value("row", isInteger(i -> i >= 1 && i <= 9))
                              .value("column", isInteger(i -> i >= 1 && i <= 9))
                          )
                      )
                      .value("columns", 9)
                      .value("rows", 9)
              );
      
              return CheckResult.correct();
          }
      
          @DynamicTest
          DynamicTesting[] dynamicTests = new DynamicTesting[]{
              this::testEndpoint,
              this::testEndpointAvailableSeats
          };
      }
    learner_created: false
  - name: build.gradle
    visible: true
    text: |
      buildscript {
          repositories {
              mavenCentral()
          }
          dependencies {
              classpath "org.springframework.boot:spring-boot-gradle-plugin:$hs.spring.bootVersion"
              classpath "io.spring.gradle:dependency-management-plugin:$hs.spring.dependencyManagementVersion"
          }
      }
      
      apply plugin: 'java'
      apply plugin: 'org.springframework.boot'
      apply plugin: 'io.spring.dependency-management'
      
      repositories {
          mavenCentral()
      }
      
      sourceSets.main.resources.srcDirs = ["src/resources"]
      
      dependencies {
          implementation 'org.springframework.boot:spring-boot-starter'
          implementation 'org.springframework.boot:spring-boot-starter-actuator'
          implementation 'org.springframework.boot:spring-boot-starter-web'
      }
      
      test {
          jvmArgs '--add-opens', 'java.base/java.lang=ALL-UNNAMED'
      }
    learner_created: false
  - name: src/cinema/api/SeatService.java
    visible: true
    learner_created: true
  - name: src/cinema/models/Seat.java
    visible: true
    learner_created: true
  - name: src/cinema/models/MovieTheatre.java
    visible: true
    learner_created: true
feedback_link: https://hyperskill.org/projects/189/stages/945/implement#comment
status: Solved
feedback:
  message: Congratulations!
  time: "Tue, 17 Oct 2023 04:19:21 UTC"
record: -1
